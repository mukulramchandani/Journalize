{"version":3,"sources":["components/UpdateDiaryPage.js","components/DairyCard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","menuButton","marginRight","spacing","fontSize","title","searchRoot","padding","display","alignItems","width","input","marginLeft","flex","iconButton","button","background","color","gridRoot","gridPaper","textAlign","palette","text","secondary","cardRoot","maxWidth","cardMedia","height","alignSelf","updatedDate","modal","justifyContent","modalPaper","backgroundColor","paper","border","boxShadow","shadows","headerRoot","margin","UpdateDiaryPage","id","content","image","date","modalState","classes","React","useState","openModal","pageContent","setPageContent","pageTitle","setPageTitle","imageLink","setImageLink","pageDatePicker","openPageDatePicker","Date","parseInt","pageDate","setPageDate","pages","JSON","parse","localStorage","getItem","useEffect","console","log","utils","DateFnsUtils","Modal","aria-labelledby","aria-describedby","className","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","DatePicker","label","format","value","onChange","KeyboardButtonProps","TextFieldComponent","noValidate","autoComplete","TextField","placeholder","multiline","onBlur","e","target","defaultValue","style","overflow","config","readonly","toolbar","innerHTML","variant","size","Button","onClick","journals","i","length","String","getTime","setItem","stringify","window","location","reload","Typography","gutterBottom","component","paddingRight","toDateString","IconButton","edge","aria-label","cardContent","maxHeight","cardTitle","appBar","position","viewImage","viewTitle","DairyCard","setOpen","updatePage","setUpdatePage","didMount","setDidMount","dairyDate","handleClose","endIcon","CardMedia","CardContent","Grid","item","xs","sm","md","Card","CardActionArea","CardActions","disabled","key","App","selectedDate","setSelectedDate","filterStatus","setFilterStatus","datePicker","openDatePicker","addPages","filtered","setFiltered","filterByDate","journalDate","getDate","getFullYear","getMonth","filter","AppBar","Toolbar","startIcon","container","reverse","map","pageObject","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86a3e917.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport TodayIcon from '@material-ui/icons/Today';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport 'jodit';\nimport 'jodit/build/jodit.min.css';\nimport JoditEditor from \"jodit-react\";\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n  } from '@material-ui/pickers';\n  \n  import DateFnsUtils from '@date-io/date-fns';\n\n  import 'date-fns';\n\n  const useStyles = makeStyles((theme) => ({\n\n    root: {\n        flexGrow: 1,\n        marginBottom:80\n      },\n      menuButton: {\n        marginRight: theme.spacing(2),\n        fontSize:'large'\n      },\n      title: {\n        fontSize:20,\n        flexGrow: 1,\n      },\n      searchRoot : {\n        padding: 0,\n        display: 'flex',\n        alignItems: 'center',\n        width: 300,\n        marginRight:15,\n      },\n      input: {\n        marginLeft: theme.spacing(3),\n        flex: 1,\n      },\n      iconButton: {\n        padding: 10,\n      },\n      button:{\n        fontSize : 17,\n        background:'orange',\n        color:'black'\n      },\n      gridRoot : {\n        flexGrow:1,\n        padding:20\n      },\n      gridPaper : {\n          padding: theme.spacing(2),\n          textAlign: 'center',\n          color: theme.palette.text.secondary,\n      },\n      cardRoot : {\n        maxWidth: '100%',\n      },\n      cardMedia : {\n        height : 200,\n        width:'100%',\n        alignSelf:'center'\n      },\n      updatedDate : {\n        marginLeft : 20,\n        fontSize:10,\n        color:'grey'\n      },\n        modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      modalPaper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n      headerRoot : {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '100%',\n        }\n      }\n\n  }))\n\n\n\nexport default function UpdateDiaryPage({id,title,content,image,date,modalState}){\n\n    const classes = useStyles();\n\n    const [modal, openModal] = React.useState(modalState);\n\n    const [pageContent,setPageContent] = React.useState(content);\n\n    const [pageTitle,setPageTitle] = React.useState(title);\n\n    const [imageLink,setImageLink] = React.useState(image);\n\n    const [pageDatePicker,openPageDatePicker] = React.useState(false);\n\n    const [pageDate,setPageDate] = React.useState(new Date(parseInt(date)));\n\n    let pages = JSON.parse(localStorage.getItem('journals'));\n\n    const handlePageDateChange = (date) => {\n        setPageDate(date);\n        openPageDatePicker(false);\n      };\n    \n      const updateContent = (e) => {\n        //console.log(e.target.innerHTML);\n        setPageContent(e.target.innerHTML);\n    }\n\n    const handlePageUpdate = (e) => {\n        \n\n        let journals = pages;\n\n\n        for(var i=0;i<journals.length;i++){\n            if(journals[i][\"id\"] === id){\n                journals[i] = {\n                    id : id,\n                    image : imageLink,\n                    date : String(pageDate.getTime()),\n                    title : pageTitle,\n                    content : pageContent\n                }\n                localStorage.setItem('journals',JSON.stringify([...journals]));\n            }\n        }\n        window.location.reload();\n        openModal(false);\n\n        console.log(JSON.parse(journals));\n    }\n\n    useEffect(()=>{\n        if(modal){\n            openModal(true);\n        }\n        console.log(modal);\n    },[modal])\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Modal\n  aria-labelledby=\"transition-modal-title\"\n  aria-describedby=\"transition-modal-description\"\n  className={classes.modal}\n  open={modal}\n  onClose={()=>openModal(false)}\n  closeAfterTransition\n  BackdropComponent={Backdrop}\n  BackdropProps={{\n    timeout: 500,\n  }}\n>\n  <Fade in={modal}>\n    <div className={classes.modalPaper}>\n      {/* <h2 id=\"transition-modal-title\">Transition modal</h2> */}\n\n      <DatePicker\n      margin=\"normal\"\n      id=\"date-picker-dialog\"\n      label=\"Journalize\"\n      format=\"MM/dd/yyyy\"\n      value={pageDate}\n      onChange={handlePageDateChange}\n      KeyboardButtonProps={{\n        'aria-label': 'change date',\n      }}\n      open={pageDatePicker}\n      onClose = {()=>openPageDatePicker(false)}\n      TextFieldComponent={() => null}\n    />\n\n      <form className={classes.headerRoot} noValidate autoComplete=\"off\">\n      <div>\n      <TextField\n      id=\"standard-textarea\"\n      label=\"Name the best thing happenned today :)\"\n      placeholder=\"Journalize yourself!\"\n      multiline\n      onBlur={(e)=>setPageTitle(e.target.value)}\n      defaultValue={pageTitle}\n    />\n      </div>\n      </form>\n        <div style={{height:'400px',width:'200',overflow:\"auto\"}}>\n            <JoditEditor\n            value={pageContent}\n            config={{\n                readonly: false, // all options from https://xdsoft.net/jodit/play.html\n                toolbar: true\n            }}\n           // onChange={}\n            onBlur = {updateContent}\n        />\n        </div>\n        <TextField\n        label=\"Image Link\"\n        id=\"outlined-size-small\"\n        defaultValue={imageLink}\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"https://...\"\n        onChange={(e)=>setImageLink(e.target.value)}\n      />\n        <div style={{display:\"flex\"}}>\n        <Button size=\"medium\" color=\"primary\" style={{flexGrow:1}}\n        onClick={()=>openModal(false)}\n        >\n          Close\n        </Button>\n      <Button size=\"medium\" color=\"primary\" style={{flexGrow:1}}\n      onClick={handlePageUpdate}\n      >\n        Update\n      </Button>\n\n      <Typography gutterBottom variant=\"caption\" component=\"p\" className={classes.updatedDate} style={{paddingRight:15,alignSelf:\"flex-end\",fontSize:\"inherit\"}}>\n      <b>{new Date(pageDate).toDateString()}</b>\n   </Typography>\n      <IconButton onClick={()=>openPageDatePicker(true)} edge=\"end\" color=\"inherit\" aria-label=\"today\" size=\"medium\">\n      <TodayIcon /> \n    </IconButton> \n    </div>\n    </div>\n  </Fade>\n</Modal>\n</MuiPickersUtilsProvider>\n    )\n\n}","import React, { useEffect } from 'react';\n\nimport \n{ Card,CardActionArea,CardActions,CardContent,CardMedia, makeStyles, Typography,Grid,Button,Modal,Backdrop,Fade } \nfrom '@material-ui/core';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport parse from 'html-react-parser';\n\nimport UpdateDiaryPage from './UpdateDiaryPage';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    cardRoot : {\n        maxWidth: '100%',\n      },\n      cardMedia : {\n        height : 200,\n        width:'100%',\n        alignSelf:'center'\n      },\n      cardContent : {\n          maxHeight:100,\n          overflow:'hidden',\n      },\n      cardTitle:{\n          maxHeight:60,\n          overflow:'hidden'\n      },\n      updatedDate : {\n        marginLeft : 20,\n        fontSize:18,\n        color:'grey'\n      },\n      appBar: {\n        position: 'relative',\n      },\n      title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n      },\n      viewImage:{\n        height : '30%',\n        width:'30%',\n        alignSelf:'center'\n      },\n      viewTitle:{\n          alignSelf:\"center\"\n      },\n      paper: {\n        position: 'absolute',\n        width: 'auto',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n      modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n}));\n\n\n\n\n\nexport default function DairyCard({title,content,date,image,id}){\n\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const [updatePage,setUpdatePage] = React.useState(false);\n\n    const [didMount,setDidMount] = React.useState(false);\n\n\n\n    const dairyDate = new Date(parseInt(date)).toDateString();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n      const handleClose = () => {\n        setOpen(false);\n      };\n\n\n      useEffect(()=>{\n        if(!didMount){\n          setDidMount(true);\n        }else{\n        if(!updatePage){\n          setUpdatePage(true);\n        }else {\n          setUpdatePage(false);\n          setUpdatePage(true);\n        }\n        }\n        console.log(updatePage)\n      },[updatePage])\n    return (\n        <>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        className={classes.modal}\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n      <Fade in={open}>\n\n      <div className={classes.paper}>\n      <div style={{display:\"flex\",justifyContent:\"center\"}}>\n            <Button endIcon={<CloseIcon/>} size=\"small\" color=\"primary\" variant=\"contained\" onClick={handleClose}>\n            close\n            </Button>\n  </div>\n      <CardMedia\n      className={classes.cardMedia}\n      image={image}\n      title=\"diaryImg\"\n      />\n      <div style={{overflow:\"scroll\",maxHeight:'300px'}}>\n      <CardContent>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.viewTitle}>\n      {title}\n      </Typography>\n      <div>\n      {parse(content)}\n      </div>\n      </CardContent>\n      </div>\n      </div>\n    </Fade>\n      </Modal>\n        <Grid item xs={12} sm={6} md={4}>\n        <Card className={classes.cardRoot}>\n        <CardActionArea\n        onClick={handleClickOpen}\n        >            \n        <CardMedia\n        className={classes.cardMedia}\n        image={image}\n        title=\"diaryImg\"\n        />\n        <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.cardTitle}>\n        {title}\n        </Typography>\n        <div className={classes.cardContent}>\n        {parse(content)}\n        </div>\n        </CardContent>\n        </CardActionArea>\n        <Typography gutterBottom variant=\"caption\" component=\"p\" className={classes.updatedDate}>\n        <b>{dairyDate}</b>\n        </Typography>\n        <CardActions>\n        <Button size=\"small\" color=\"primary\" disabled>\n            Share\n        </Button>\n        <Button size=\"medium\" color=\"primary\" onClick={()=>setUpdatePage(!updatePage)}>\n            Edit\n        </Button>\n        </CardActions>\n        </Card>\n        </Grid>\n        {\n          updatePage ? \n          <UpdateDiaryPage \n          title={title}\n          image={image}\n          id={id}\n          content = {content}\n          modalState = {updatePage}\n          key={updatePage}\n          date={date}\n          />\n        : <UpdateDiaryPage \n        title={title}\n        image={image}\n        id={id}\n        content = {content}\n        modalState ={updatePage}\n        key={updatePage}\n        date={date}\n        />\n      }\n        </>\n    )\n\n    \n}","import 'date-fns';\nimport React, { useEffect } from 'react';\nimport './App.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Grid from '@material-ui/core/Grid';\n\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\n\nimport {\n  MuiPickersUtilsProvider,\n  DatePicker\n} from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport TodayIcon from '@material-ui/icons/Today';\n\nimport 'jodit';\nimport 'jodit/build/jodit.min.css';\nimport JoditEditor from \"jodit-react\";\n\nimport DiaryCard from './components/DairyCard';\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom:80\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    fontSize:'large'\n  },\n  title: {\n    fontSize:20,\n    flexGrow: 1,\n  },\n  searchRoot : {\n    padding: 0,\n    display: 'flex',\n    alignItems: 'center',\n    width: 300,\n    marginRight:15,\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  button:{\n    fontSize : 17,\n    background:'orange',\n    color:'black'\n  },\n  gridRoot : {\n    flexGrow:1,\n    padding:20\n  },\n  gridPaper : {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n  },\n  cardRoot : {\n    maxWidth: '100%',\n  },\n  cardMedia : {\n    height : 200,\n    width:'100%',\n    alignSelf:'center'\n  },\n  updatedDate : {\n    marginLeft : 20,\n    fontSize:10,\n    color:'grey'\n  },\n    modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalPaper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  headerRoot : {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n    }\n  }\n\n}));\n\n\nfunction App() {\n\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const [filterStatus,setFilterStatus] = React.useState(false);\n\n  const [datePicker, openDatePicker] = React.useState(false);\n\n  const [modal,openModal] = React.useState(false);\n\n  const [pageTitle,setPageTitle] = React.useState('');\n\n  const [pageContent,setPageContent] = React.useState(\"<p><strong><span style='font-family: Helvetica, sans-serif; color: rgb(183, 183, 183); background-color: rgb(255, 255, 255); font-size: 24px;'>Take a deep breath before you write here :)</span></strong></p>\");\n\n  const [pageDate,setPageDate] = React.useState(new Date());\n\n  const [pageDatePicker,openPageDatePicker] = React.useState(false);\n\n  const [pages,addPages] = React.useState(localStorage.getItem('journals') || []);\n\n  const [imageLink,setImageLink] = React.useState('');\n\n  const [filtered,setFiltered] = React.useState([]);\n\n\n  const filterByDate = (item) => {\n    let date = selectedDate;\n    let journalDate = new Date(parseInt(item.date));\n\n    if(date.getDate() === journalDate.getDate() && date.getFullYear() === journalDate.getFullYear() && date.getMonth() === journalDate.getMonth()){\n      return true;\n    }\n    else \n    return false;\n  }\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    openDatePicker(false);\n    setFilterStatus(true);\n\n    //let journals = typeof(pages) == 'string' ? JSON.parse(pages) : pages;\n    \n    \n\n  };\n\n  const handlePageDateChange = (date) => {\n    setPageDate(date);\n    openPageDatePicker(false);\n  };\n\n  const updateContent = (e) => {\n    //console.log(e.target.innerHTML);\n    setPageContent(e.target.innerHTML);\n}\n\n  const handlePageSave = (e) => {\n    let pageObject = {\n      id : String(new Date().getTime()),\n      image : imageLink,\n      date : String(pageDate.getTime()),\n      title : pageTitle,\n      content : pageContent\n    };\n    if(typeof(pages) == 'object'){\n      console.log(pages);\n      localStorage.setItem('journals',JSON.stringify([...pages,pageObject]));\n      addPages(JSON.stringify([...pages,pageObject]));\n      console.log(\"First page\",pages);\n    }else{\n      let journals = JSON.parse(pages);\n      localStorage.setItem('journals',JSON.stringify([...journals,pageObject]));\n      addPages(JSON.stringify([...journals,pageObject]));\n      console.log(JSON.parse(pages));\n    }\n\n    openModal(false);\n    setPageTitle('');\n    setPageContent(\"<p><strong><span style='font-family: Helvetica, sans-serif; color: rgb(183, 183, 183); background-color: rgb(255, 255, 255); font-size: 24px;'>Take a deep breath before you write here :)</span></strong></p>\"); \n    setPageDate(new Date());\n  }\n\n\n\nuseEffect(()=> {\n  if(!(pages.length > 2)){\n    console.log(localStorage.getItem('journals'));\n    localStorage.setItem('journals',JSON.stringify([]));\n    console.log(localStorage.getItem('journals'));\n }else{\n   console.log(\"Render the main UI\");\n }\n\n},[pages]);\n\nuseEffect(()=>{\n  let journals = typeof(pages) == 'string' ? JSON.parse(pages) : pages;\n  setFiltered(journals.filter(filterByDate));\n},[selectedDate]);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n         { filterStatus ? <IconButton edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"back\"\n         onClick={()=>setFilterStatus(false)}\n         >\n            <BackspaceIcon />\n          </IconButton> :null}\n          <Typography variant=\"h6\"  className={classes.title}>\n            Journalize\n          </Typography>\n          <IconButton onClick={()=>openDatePicker(!datePicker)} edge=\"start\" color=\"inherit\" aria-label=\"filter\"  className={classes.menuButton} style={{marginLeft:15}}  >\n          <FilterListIcon fontSize=\"large\"/>\n        </IconButton>\n        <DatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Filter your Journalize\"\n        format=\"MM/dd/yyyy\"\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        open={datePicker}\n        onClose = {()=>openDatePicker(false)}\n        TextFieldComponent={() => null}\n      />\n          <Button variant=\"contained\" startIcon={<ImportContactsIcon/>} className={classes.button} color=\"inherit\" onClick={()=>openModal(true)}>Add New</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n\n\n{ filterStatus ? <div className={classes.gridRoot}>\n\n{\n<Grid container spacing={3}>\n{typeof(filtered) == 'object' ? filtered.reverse().map((item,i)=>\n<DiaryCard\ntitle={item.title}\nimage={item.image}\ncontent={item.content}\ndate={item.date}\nid={item.id}\nkey={i}\n/>\n) :null}\n</Grid>\n}\n\n</div> :   <div className={classes.gridRoot}>\n\n    {\n    <Grid container spacing={3}>\n    {typeof(pages) == 'string' ? JSON.parse(pages).reverse().map((item,i)=>\n    <DiaryCard\n    title={item.title}\n    image={item.image}\n    content={item.content}\n    date={item.date}\n    id={item.id}\n    key={i}\n    />\n    ) :null}\n    </Grid>\n    }\n\n  </div>}\n  <div>\n  <Modal\n  aria-labelledby=\"transition-modal-title\"\n  aria-describedby=\"transition-modal-description\"\n  className={classes.modal}\n  open={modal}\n  onClose={()=>openModal(false)}\n  closeAfterTransition\n  BackdropComponent={Backdrop}\n  BackdropProps={{\n    timeout: 500,\n  }}\n>\n  <Fade in={modal}>\n    <div className={classes.modalPaper}>\n      {/* <h2 id=\"transition-modal-title\">Transition modal</h2> */}\n\n      <DatePicker\n      margin=\"normal\"\n      id=\"date-picker-dialog\"\n      label=\"Journalize\"\n      format=\"MM/dd/yyyy\"\n      value={pageDate}\n      onChange={handlePageDateChange}\n      KeyboardButtonProps={{\n        'aria-label': 'change date',\n      }}\n      open={pageDatePicker}\n      onClose = {()=>openPageDatePicker(false)}\n      TextFieldComponent={() => null}\n    />\n\n      <form className={classes.headerRoot} noValidate autoComplete=\"off\">\n      <div>\n      <TextField\n      id=\"standard-textarea\"\n      label=\"Name the best thing happenned today :)\"\n      placeholder=\"Journalize yourself!\"\n      multiline\n      onBlur={(e)=>setPageTitle(e.target.value)}\n    />\n      </div>\n      </form>\n        <div style={{height:'400px',width:'200',overflow:\"auto\"}}>\n            <JoditEditor\n            value={pageContent}\n            config={{\n                readonly: false, // all options from https://xdsoft.net/jodit/play.html\n                toolbar: true\n            }}\n           // onChange={}\n            onBlur = {updateContent}\n        />\n        </div>\n        <TextField\n        label=\"Image Link\"\n        id=\"outlined-size-small\"\n        //defaultValue=\"Small\"\n        variant=\"outlined\"\n        size=\"small\"\n        placeholder=\"https://...\"\n        onChange={(e)=>setImageLink(e.target.value)}\n      />\n        <div style={{display:\"flex\"}}>\n      <Button size=\"large\" color=\"primary\" style={{flexGrow:1}}\n      onClick={handlePageSave}\n      >\n        Save\n      </Button>\n      <Typography gutterBottom variant=\"caption\" component=\"p\" className={classes.updatedDate} style={{paddingRight:15,alignSelf:\"flex-end\",fontSize:\"inherit\"}}>\n      <b>{pageDate.toDateString()}</b>\n   </Typography>\n      <IconButton onClick={()=>openPageDatePicker(true)} edge=\"end\" color=\"inherit\" aria-label=\"today\" size=\"medium\">\n      <TodayIcon /> \n    </IconButton> \n    </div>\n    </div>\n  </Fade>\n</Modal>\n  </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}